{"version":3,"sources":["imgs/pigeon.svg","imgs/PigeonRTC_signalling.png","imgs/WebRTC_signalling.png","imgs/WebRTC_needs_servers.png","components/WebRTCVideo.js","connectionManagers/PigeonRTCConnectionMngr.js","components/WebRTCWithCarrierPigeonTab.js","components/AboutPigeonRTC1Tab.js","components/AboutPigeonRTC2Tab.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","WebRTCVideo","classes","this","props","react_default","a","createElement","Card_default","className","videoCard","CardContent_default","Typography_default","variant","gutterBottom","videoName","ref","videoRef","autoPlay","Component","withStyles","theme","width","heigth","ICE_CONFIGURATION","iceServers","urls","PigeonRTCConnectionMngr","Object","classCallCheck","rtcConnection","RTCPeerConnection","localConnectionData","description","candidates","subscribers","Set","localMediaStreamPromise","remoteMediaStreamPromise","onicecandidate","handleIceCandidate","bind","handler","add","delete","_this","forEach","JSON","stringify","Promise","resolve","reject","navigator","getUserMedia","video","audio","stream","Error","_this2","ontrack","event","streams","getLocalMediaStream","localMediaStream","getTracks","track","_this3","addTrack","createOffer","localDescription","setLocalDescription","notifyAll","console","log","concat","setRemoteDescription","_this4","createAnswer","i","length","handleRemoteIceCandidate","candidate","push","addIceCandidate","WebRTCWithCarrierPigeonTab","possibleConstructorReturn","getPrototypeOf","call","state","startOrAccept","isConnected","remoteConnectionData","rtcConnectionMngr","subscribe","handleLocalConnectionData","localVideoStream","localVideoEl","remoteVideoStream","remoteVideoEl","setLocalVideoEl","assertThisInitialized","setRemoteVideoEl","el","then","mediaStream","srcObject","getRemoteMediaStream","setState","parse","handleAnswer","handleOffer","error","Grid_default","container","direction","justify","alignItems","item","renderStartOrAcceptConnectionRadioGroup","offerAnswerInputContainer","renderOfferAnswerFields","renderConnectBtn","_this5","FormControl_default","component","FormLabel_default","startOrAcceptFormLabel","RadioGroup_default","row","name","value","onChange","handleStartOrAcceptSelection","target","style","display","justifyContent","FormControlLabel_default","control","Radio_default","label","disabled","_this6","_this$state","isDisabled","Button_default","color","startOrAcceptConnectBtn","onClick","handleConnectBtnClick","_this7","_this$state2","remoteConnectionTextField","TextField_default","handleRemoteConnectionData","multiline","rows","margin","offerAnswerInput","localConnectionTextField","spacing","xs","videoChatContainer","doublePadded","components_WebRTCVideo","root","renderVideoChatUI","renderSetupConnectionUI","padding","paddingBottom","marginBottom","unit","AboutPigeonRTC1","aboutTab","aboutTabSection","src","pigeonSvg","alt","title","href","onMoreInfoBtnClick","height","AboutPigeonRTC2","Fragment","aboutSectionBodyText","WebRTCNeedsServersImg","WebRTCSignallingImg","signallingImg","PigeonRTCSignallingImg","renderWebRTCNeedsServers","renderSignallingComparison","onConnectBtnClick","fontSize","createMuiTheme","palette","primary","blue","secondary","purple","TAB_OPTIONS","freeze","PIGEON","ABOUT1","ABOUT2","App","currentTab","handleTabChange","newTab","CssBaseline_default","styles","AppBar_default","position","Tabs_default","Tab_default","AboutPigeonRTC1Tab","AboutPigeonRTC2Tab","components_WebRTCWithCarrierPigeonTab","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ea418e37.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/pigeon.8dfa22b7.svg\";","module.exports = __webpack_public_path__ + \"static/media/PigeonRTC_signalling.8ef6af10.png\";","module.exports = __webpack_public_path__ + \"static/media/WebRTC_signalling.04b3f57d.png\";","module.exports = __webpack_public_path__ + \"static/media/WebRTC_needs_servers.18a98a74.png\";","import React, { Component } from 'react';\n\n// material ui\nimport { withStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\n\nconst styles = ((theme) => ({\n  videoCard: {\n    width: '100%',\n    heigth: '100%',\n  }\n}));\n\nclass WebRTCVideo extends Component {\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <Card className={classes.videoCard}>\n        <CardContent>\n          <Typography variant=\"h5\" gutterBottom>\n            {this.props.videoName}\n          </Typography>\n          <video ref={this.props.videoRef} autoPlay={true}></video>\n        </CardContent>\n      </Card>\n    );\n  }\n}\n\nexport default withStyles(styles)(WebRTCVideo);\n","const ICE_CONFIGURATION = {\n  iceServers: [\n    {urls: 'stun:stun.l.google.com:19302'}\n  ]\n};\n\nexport default class PigeonRTCConnectionMngr {\n  constructor() {\n    this.rtcConnection = new RTCPeerConnection(ICE_CONFIGURATION);\n\n    /*\n      Unfortunately sending ice candidates via carrier pigeon is most likely a slow and arduous process...\n      ...and likely our users have a limited fleet of pigeons to send out\n      ...so the hacky solution is to instead blob our description + ice candidates into a single message.\n      ...this way way our users only need to send out a single pigeon out leaving the rest of the \"kit\" to relax & frolic\n      ...while this likely might cause issues in situations that require multiple candidates to be sent back and forth,\n         (ex: when stun fails and we need to resort to a turn server? - my knowledge on the matter is actually quite limited...)\n         still i think for the sake of our pigeon friends we can make this concession\n    */\n    this.localConnectionData = {description: null, candidates: []};\n    this.subscribers = new Set();\n\n    this.localMediaStreamPromise = null;\n    this.remoteMediaStreamPromise = null;\n\n    this.rtcConnection.onicecandidate = this.handleIceCandidate.bind(this);\n  }\n\n  subscribe(handler) {\n    this.subscribers.add(handler);\n  }\n\n  unsubscribe(handler) {\n    this.subscribers.delete(handler);\n  }\n\n  notifyAll() {\n    this.subscribers.forEach((handler) => handler(JSON.stringify(this.localConnectionData)));\n  }\n\n  async getLocalMediaStream() {\n    if (this.localMediaStreamPromise === null) {\n      this.localMediaStreamPromise = new Promise((resolve, reject) => {\n        navigator.getUserMedia(\n          {video: true, audio: true},\n          (stream) => resolve(stream),\n          () => reject(new Error('Failed to get local media stream'))\n        );\n      });\n    }\n\n    return this.localMediaStreamPromise;\n  }\n\n  async getRemoteMediaStream() {\n    if (this.remoteMediaStreamPromise === null) {\n      this.remoteMediaStreamPromise = new Promise((resolve, reject) => {\n        this.rtcConnection.ontrack = ((event) => {\n          resolve(event.streams[0]);\n        });\n      });\n    }\n\n    return this.remoteMediaStreamPromise;\n  }\n\n  /* Initiate a call */\n  async createOffer() {\n    // add local media stream tracks to rtc connection\n    let localMediaStream = await this.getLocalMediaStream();\n    localMediaStream.getTracks().forEach((track) => this.rtcConnection.addTrack(track, localMediaStream));\n\n    // send an offer\n    let localDescription = await this.rtcConnection.createOffer();\n    await this.rtcConnection.setLocalDescription(localDescription);\n    \n    this.localConnectionData.description = this.rtcConnection.localDescription;\n    this.notifyAll();\n  }\n\n  /* Handle an incoming call */\n  async handleOffer({description, candidates}) {\n    console.log(`handleOffer: ${description}`);\n\n    await this.rtcConnection.setRemoteDescription(description);\n\n    // add local media stream tracks to rtc connection\n    let localMediaStream = await this.getLocalMediaStream();\n    localMediaStream.getTracks().forEach((track) => this.rtcConnection.addTrack(track, localMediaStream));\n\n    // send an answer\n    await this.rtcConnection.setLocalDescription(await this.rtcConnection.createAnswer());\n\n    this.localConnectionData.description = this.rtcConnection.localDescription;\n    for (let i = 0; i < candidates.length; i++) {\n      await this.handleRemoteIceCandidate(candidates[i]);\n    }\n\n    this.notifyAll();\n  }\n\n  /* Handle an answer to our offer (if we initiated the call) */\n  async handleAnswer({description, candidates}) {\n    console.log(`handleAnswer: ${description}`);\n    await this.rtcConnection.setRemoteDescription(description);\n\n    this.localConnectionData.description = this.rtcConnection.localDescription;\n    for (let i = 0; i < candidates.length; i++) {\n      await this.handleRemoteIceCandidate(candidates[i]);\n    }\n  }\n\n  async handleIceCandidate({candidate}) {\n    console.log(`handleIceCandidate: ${candidate}`);\n\n    if (!candidate) return;\n    this.localConnectionData.candidates.push({candidate});\n    this.notifyAll();\n  }\n\n  async handleRemoteIceCandidate({candidate}) {\n    console.log(`handleRemoteIceCandidate: ${candidate}`);\n\n    if (!candidate) return;\n    await this.rtcConnection.addIceCandidate(candidate);\n  }\n}\n","import React, { Component } from 'react';\n\n// material-ui\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport Typography from '@material-ui/core/Typography';\n\n// web rtc stuff\nimport WebRTCVideo from './WebRTCVideo';\nimport PigeonRTCConnectionMngr from '../connectionManagers/PigeonRTCConnectionMngr';\n\nconst styles = ((theme) => ({\n  root: {\n    padding: '20px',\n  },\n  videoChatContainer: {\n    paddingBottom: '30px',\n  },\n  startOrAcceptFormLabel: {\n    marginBottom: '20px',\n  },\n  offerAnswerInputContainer: {\n    width: '100%',\n    marginBottom: '30px',\n  },\n  offerAnswerInput: {\n    width: '100%'\n  },\n  doublePadded: {\n    padding: theme.spacing.unit * 2,\n  },\n}));\n\nclass WebRTCWithCarrierPigeonTab extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      startOrAccept: null,\n      isConnected: false,\n      localConnectionData: '',\n      remoteConnectionData: '',\n    };\n\n    this.rtcConnectionMngr = new PigeonRTCConnectionMngr();\n    this.rtcConnectionMngr.subscribe((localConnectionData) => this.handleLocalConnectionData(localConnectionData));\n\n    // since we're using MediaStream objects need to store these as members and user refs to set the video src's\n    this.localVideoStream = null;\n    this.localVideoEl = null;\n    \n    this.remoteVideoStream = null;\n    this.remoteVideoEl = null;\n\n    this.setLocalVideoEl = this.setLocalVideoEl.bind(this);\n    this.setRemoteVideoEl = this.setRemoteVideoEl.bind(this);\n  }\n\n  setLocalVideoEl(el) {\n    this.localVideoEl = el;\n\n    this.rtcConnectionMngr.getLocalMediaStream()\n      .then((mediaStream) => this.localVideoStream = mediaStream)\n      .then(() => {\n        if (this.localVideoEl) this.localVideoEl.srcObject = this.localVideoStream;\n      });\n  }\n\n  setRemoteVideoEl(el) {\n    this.remoteVideoEl = el;\n\n    this.rtcConnectionMngr.getRemoteMediaStream()\n      .then((mediaStream) => this.remoteVideoStream = mediaStream)\n      .then(() => {\n        if (this.remoteVideoEl) this.remoteVideoEl.srcObject = this.remoteVideoStream;\n      });\n  }\n\n  handleLocalConnectionData(localConnectionData) {\n    this.setState({localConnectionData});\n  }\n\n  handleRemoteConnectionData(remoteConnectionData) {\n    this.setState({remoteConnectionData});\n  }\n\n  handleStartOrAcceptSelection(startOrAccept) {\n    this.setState({startOrAccept});\n    if (startOrAccept === 'start') {\n      this.rtcConnectionMngr.createOffer();\n    }\n  }\n\n  handleConnectBtnClick() {\n    const remoteConnectionData = JSON.parse(this.state.remoteConnectionData);\n\n    try {\n      if (this.state.startOrAccept === 'start') {\n        this.rtcConnectionMngr.handleAnswer(remoteConnectionData)\n          .then(() => this.setState({isConnected: true}));\n      } else if (this.state.startOrAccept === 'accept') {\n        this.rtcConnectionMngr.handleOffer(remoteConnectionData)\n          .then(() => this.setState({isConnected: true}));\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  renderSetupConnectionUI() {\n    const { startOrAccept } = this.state;\n    const { classes } = this.props;\n\n    return (\n      <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\">\n        <Grid item>\n          {this.renderStartOrAcceptConnectionRadioGroup()}\n        </Grid>\n        <Grid item className={classes.offerAnswerInputContainer}>\n          {startOrAccept && this.renderOfferAnswerFields()}\n        </Grid>\n        <Grid item>\n          {startOrAccept && this.renderConnectBtn()}\n        </Grid>\n      </Grid>\n    )\n  }\n\n  renderStartOrAcceptConnectionRadioGroup() {\n    const { startOrAccept } = this.state;\n    const { classes } = this.props;\n\n    return (\n      <FormControl component=\"fieldset\">\n        <FormLabel component=\"legend\" className={classes.startOrAcceptFormLabel}>\n          <Typography variant=\"h5\">\n            Setup a WebRTC connection via Carrier Pigeon\n          </Typography>\n          <Typography variant=\"subtitle2\">\n            (now compatible with smoke signals &amp; messages in a bottle!)\n          </Typography>\n        </FormLabel>\n        <RadioGroup\n          row\n          name=\"start_or_accept\"\n          value={startOrAccept}\n          onChange={(event) => this.handleStartOrAcceptSelection(event.target.value)}\n          style={{display: 'flex', justifyContent: 'space-evenly'}}\n        >\n          <FormControlLabel\n            value=\"start\"\n            control={<Radio />}\n            label=\"Start a Connection\"\n            disabled={startOrAccept !== null}\n          />\n          <FormControlLabel\n            value=\"accept\"\n            control={<Radio />}\n            label=\"Accept a Connection\"\n            disabled={startOrAccept !== null}\n          />\n        </RadioGroup>\n      </FormControl>\n    );\n  }\n\n  renderConnectBtn() {\n    const { startOrAccept, localConnectionData, remoteConnectionData, isConnected } = this.state;\n    const { classes } = this.props;\n\n    let isDisabled = true;\n    if (startOrAccept === 'start') {\n      isDisabled = (!localConnectionData || !remoteConnectionData || isConnected)\n    } else if (startOrAccept === 'accept') {\n      isDisabled = (!remoteConnectionData || isConnected);\n    }\n\n    return (\n      <Button\n        disabled={isDisabled}\n        variant=\"contained\"\n        color=\"primary\"\n        className={classes.startOrAcceptConnectBtn}\n        onClick={() => this.handleConnectBtnClick()}\n      >\n        Connect\n      </Button>\n    );\n  }\n\n  renderOfferAnswerFields() {\n    const { startOrAccept, localConnectionData, remoteConnectionData } = this.state;\n    const { classes } = this.props;\n\n    let remoteConnectionTextField = (\n      <TextField\n        label={`${startOrAccept === 'start' ? 'Answer' : 'Offer'} - Get this from your friend! (via pigeon)`}\n        onChange={(event) => this.handleRemoteConnectionData(event.target.value)}\n        value={remoteConnectionData}\n        multiline\n        rows=\"1\"\n        margin=\"normal\"\n        variant=\"outlined\"\n        className={classes.offerAnswerInput}\n      />\n    );\n\n    let localConnectionTextField = (\n      <TextField\n        label={`${startOrAccept === 'start' ? 'Offer' : 'Answer'} - Send this to your friend! (via pigeon)`}\n        disabled\n        value={localConnectionData}\n        multiline\n        rows=\"1\"\n        margin=\"normal\"\n        variant=\"outlined\"\n        className={classes.offerAnswerInput}\n      />\n    );\n\n    return (\n      <Grid container spacing={12} justify=\"space-evenly\">\n        <Grid item xs={4}>\n          {startOrAccept === 'start' && localConnectionTextField}\n          {startOrAccept === 'accept' && remoteConnectionTextField}\n        </Grid>\n        <Grid item xs={4}>\n          {startOrAccept === 'start' && remoteConnectionTextField}\n          {startOrAccept === 'accept' && localConnectionData && localConnectionTextField}\n        </Grid>\n      </Grid>\n    );\n  }\n\n  renderVideoChatUI() {\n    const { classes } = this.props;\n\n    return (\n      <Grid container spacing={12} justify=\"center\" alignItems=\"stretch\" className={classes.videoChatContainer}>\n        <Grid item xs={6} className={classes.doublePadded}>\n          <WebRTCVideo videoName=\"Local\" videoRef={this.setLocalVideoEl}/>\n        </Grid>\n        <Grid item xs={6} className={classes.doublePadded}>\n          <WebRTCVideo videoName=\"Remote\" videoRef={this.setRemoteVideoEl}/>\n        </Grid>\n      </Grid>\n    );\n  }\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <div className={classes.root}>\n        {this.renderVideoChatUI()}\n        {this.renderSetupConnectionUI()}\n      </div>\n    );\n  }\n}\n\nexport default withStyles(styles)(WebRTCWithCarrierPigeonTab);","import React, { Component } from 'react';\nimport pigeonSvg from '../imgs/pigeon.svg'; \n\n// material-ui\nimport { withStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\n\n// TODO - This and all other px literals should probably be replaced with spacing units?\nconst styles = ((theme) => ({\n  aboutTab: {\n    padding: '100px',\n  },\n  aboutTabSection: {\n    marginBottom: '50px',\n  },\n  pigeonSvg: {\n    width: '300px',\n    height: '300px',\n  }\n}));\n\nclass AboutPigeonRTC1 extends Component {\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <Grid container direction=\"column\" alignItems=\"stretch\" className={classes.aboutTab}>\n        <Grid item className={classes.aboutTabSection}>\n          <Typography variant=\"h1\">Pigeon RTC</Typography>\n        </Grid>\n        <Grid item className={classes.aboutTabSection}>\n          <img src={pigeonSvg} alt=\"pigeon rtc logo\" className={classes.pigeonSvg} title=\"img credit goes to: https://www.svgrepo.com/svg/275543/dove-pigeon\"></img>\n        </Grid>\n        <Grid item className={classes.aboutTabSection}>\n          <Typography variant=\"h4\">\n            It's <a href=\"https://webrtc.org/\">WebRTC</a> without the signalling servers ..and with pigeons!\n          </Typography>\n          <Typography variant=\"subtitle1\">\n            (See also <a href=\"https://en.wikipedia.org/wiki/IP_over_Avian_Carriers\">IPoAC</a>)\n          </Typography>\n        </Grid>\n        <Grid item className={classes.aboutTabSection}>\n          <Button variant=\"contained\" color=\"primary\" onClick={this.props.onMoreInfoBtnClick}>\n            ...Ummm What?\n          </Button>\n        </Grid>\n      </Grid>\n    );\n  }\n}\n\nexport default withStyles(styles)(AboutPigeonRTC1);","import React, { Component } from 'react';\nimport PigeonRTCSignallingImg from '../imgs/PigeonRTC_signalling.png';\nimport WebRTCSignallingImg from '../imgs/WebRTC_signalling.png';\nimport WebRTCNeedsServersImg from '../imgs/WebRTC_needs_servers.png';\n\n// material-ui\nimport { withStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\n\n// TODO - This and all other px literals should probably be replaced with spacing units?\nconst styles = ((theme) => ({\n  aboutTab: {\n    padding: '100px',\n  },\n  aboutTabSection: {\n    marginBottom: '50px',\n  },\n  signallingImg: {\n    width: '100%'\n  },\n  aboutSectionBodyText: {\n    fontSize: '24px'\n  }\n}));\n\nclass AboutPigeonRTC2 extends Component {\n\n  renderWebRTCNeedsServers() {\n    const { classes } = this.props;\n\n    return (\n      <React.Fragment>\n        <Grid item className={classes.aboutTabSection}>\n          <Typography variant=\"h4\">WebRTC still needs servers</Typography>\n        </Grid>\n        <Grid item className={classes.aboutTabSection}>\n          <Typography variant=\"body1\" className={classes.aboutSectionBodyText}>\n              While WebRTC lets us do some <a href=\"https://webrtc.org/start/#demos-and-samples\">pretty cool things</a>, such as <a href=\"https://appr.tc/\">real time video chats</a> &amp; <a href=\"https://webrtc.github.io/samples/src/content/datachannel/filetransfer/\">file transfers.</a><br/>\n              It still has one major unforgivable shortcomming ... it still needs servers.\n          </Typography>\n        </Grid>\n        <Grid item className={classes.aboutTabSection}>\n          <img src={WebRTCNeedsServersImg} alt=\"web rtc needs servers\"></img>\n          <Typography variant=\"caption\" gutterBottom>\n            <a href=\"https://www.html5rocks.com/en/tutorials/webrtc/infrastructure/\">Read more about WebRTC Signalling</a>\n          </Typography>\n        </Grid>\n      </React.Fragment>\n    )\n  }\n\n  renderSignallingComparison() {\n    const { classes } = this.props;\n\n    return (\n      <React.Fragment>\n        <Grid item className={classes.aboutTabSection}>\n          <Typography variant=\"h4\">\n            Pigeon RTC takes away the need for signalling servers!\n          </Typography>\n        </Grid>\n        <Grid item className={classes.aboutTabSection}>\n          <Grid container direction=\"row\" justify=\"space-evenly\" spacing={16}>\n            <Grid item xs={6}>\n              <Typography variant=\"h6\">WebRTC Signalling</Typography>\n            </Grid>\n            <Grid item xs={6}>\n              <Typography variant=\"h6\">PigeonRTC Signalling</Typography>\n            </Grid>\n          </Grid>\n          <Grid container direction=\"row\" justify=\"space-evenly\" spacing={16}>\n            <Grid item xs={6}>\n              <img src={WebRTCSignallingImg} alt=\"web rtc signalling\" className={classes.signallingImg}></img>\n            </Grid>\n            <Grid item xs={6}>\n              <img src={PigeonRTCSignallingImg} alt=\"pigeon rtc signalling\" className={classes.signallingImg}></img>\n            </Grid>\n          </Grid>\n        </Grid>\n        <Grid item className={classes.aboutTabSection}>\n          <Typography variant=\"body1\" className={classes.aboutSectionBodyText}>\n            Instead relying on cold unfeeling racks of machinery to connect us,<br/>\n            we can instead put our faith in disease ridden flying rats!\n          </Typography>\n        </Grid>\n      </React.Fragment>\n    )\n  }\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <Grid container direction=\"column\" alignItems=\"center\" className={classes.aboutTab}>\n        {this.renderWebRTCNeedsServers()}\n        <Grid item className={classes.aboutTabSection}></Grid>\n        {this.renderSignallingComparison()}\n        <Grid item className={classes.aboutTabSection}>\n          <Button variant=\"contained\" color=\"primary\" onClick={this.props.onConnectBtnClick}>\n            ...Okay\n          </Button>\n        </Grid>\n      </Grid>\n    );\n  }\n}\n\nexport default withStyles(styles)(AboutPigeonRTC2);","import React, { Component } from 'react';\nimport './App.css';\n\n// material-ui\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport blue from '@material-ui/core/colors/blue';\nimport purple from '@material-ui/core/colors/purple';\nimport CssBaseline from '@material-ui/core/CssBaseline';\n\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\n\n// web rtc stuff\n// import WebRTCWithServerTab from './tabs/WebRTCWithServerTab';\nimport WebRTCWithCarrierPigeonTab from './components/WebRTCWithCarrierPigeonTab';\nimport AboutPigeonRTC1Tab from './components/AboutPigeonRTC1Tab';\nimport AboutPigeonRTC2Tab from './components/AboutPigeonRTC2Tab';\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: blue,\n    secondary: purple\n  },\n});\n\nconst TAB_OPTIONS = Object.freeze({\n  // SERVER: 'server',\n  PIGEON: 'pigeon',\n  ABOUT1: 'about1',\n  ABOUT2: 'about2',\n});\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      currentTab: TAB_OPTIONS.ABOUT1\n    };\n\n    this.handleTabChange = this.handleTabChange.bind(this);\n  }\n\n  handleTabChange(newTab) {\n    this.setState({currentTab: newTab});\n  }\n\n  render() {\n    const { currentTab } = this.state;\n\n    return (\n      <CssBaseline>\n        <MuiThemeProvider theme={theme}>\n          <div className=\"App\">\n            <AppBar position=\"static\">\n              <Tabs value={currentTab} onChange={(event, value) => this.handleTabChange(value)}>\n                <Tab label=\"What is it?\" value={TAB_OPTIONS.ABOUT1}/>\n                <Tab label=\"...Ummm What?\" value={TAB_OPTIONS.ABOUT2}/>\n                <Tab label=\"Coo-Coo-nnect!\" value={TAB_OPTIONS.PIGEON}/>\n                {/* <Tab label=\"Connect by Server\" value={TAB_OPTIONS.SERVER}/> */}\n              </Tabs>\n            </AppBar>\n            {currentTab === TAB_OPTIONS.ABOUT1 && <AboutPigeonRTC1Tab onMoreInfoBtnClick={() => this.handleTabChange(TAB_OPTIONS.ABOUT2)}></AboutPigeonRTC1Tab>}\n            {currentTab === TAB_OPTIONS.ABOUT2 && <AboutPigeonRTC2Tab onConnectBtnClick={() => this.handleTabChange(TAB_OPTIONS.PIGEON)}></AboutPigeonRTC2Tab>}\n            {currentTab === TAB_OPTIONS.PIGEON && <WebRTCWithCarrierPigeonTab></WebRTCWithCarrierPigeonTab>}\n            {/* {currentTab === TAB_OPTIONS.SERVER && <WebRTCWithServerTab></WebRTCWithServerTab>} */}\n          </div>\n        </MuiThemeProvider>\n      </CssBaseline>\n    );\n  }\n}\n\nexport default (App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport 'typeface-roboto';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}